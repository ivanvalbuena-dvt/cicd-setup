substitutions:
    _APPLY_CHANGES: 'false'
    _ENV: 'undefined'
    _USECASE: 'undefined'
steps:
- id: 'context'
  name: 'alpine'
  entrypoint: 'sh'
  secretEnv: ['TF_CLOUD_CREDENTIALS']
  args:
  - '-c'
  - |
      echo "***********************"
      echo "project : $PROJECT_ID"
      echo "branch  : $BRANCH_NAME"
      echo "env     : ${_ENV}"
      echo "mode    : $([[ ${_APPLY_CHANGES} = 'true' ]] && echo 'LIVE' || echo 'DRY RUN')"
      echo "***********************"
      mkdir /config_credentials
      echo "$$TF_CLOUD_CREDENTIALS" >> /config_credentials/credentials.tfrc
      chmod 400 /config_credentials/credentials.tfrc
  volumes:
  - name: 'terraform'
    path: /config_credentials
- id: 'terraform init'
  name: 'hashicorp/terraform:1.7.4'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      export TF_CLI_CONFIG_FILE=/config_credentials/credentials.tfrc
      cd environments/${_ENV}
      TF_IN_AUTOMATION=1 terraform init -input=false
  volumes:
  - name: 'terraform'
    path: /config_credentials
- id: 'terraform plan'
  name: 'hashicorp/terraform:1.7.4'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      cd environments/${_ENV}
      TF_IN_AUTOMATION=1 terraform plan -no-color -input=false -out changes.tfplan
- id: 'terraform apply'
  name: 'hashicorp/terraform:1.7.4'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      if [ "${_APPLY_CHANGES}" = 'true' ]; then
        echo "*****************************************"
        echo "Applying changes on live environment"
        echo "*****************************************"
        cd environments/${_ENV}
        TF_IN_AUTOMATION=1 terraform apply -no-color -input=false -auto-approve changes.tfplan
      else
        echo "*****************************************"
        echo "Skipping apply (DRY RUN)"
        echo "*****************************************"
      fi
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/terraform-cloud-credentials/versions/latest
    env: 'TF_CLOUD_CREDENTIALS'
logsBucket: "gs://${PROJECT_ID}-${_USECASE}-gcs-cloud-build-logs/"
options:
  logging: GCS_ONLY
